var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","bigbasketapi","itempage","customuri","nokogirinode","/()","build_url()","csstxt()","extract_rs()","get()","get_first()","get_item_page()","get_node()","get_nodes()","get_top()","id()","name()","new()","new()","node()","open_url()","parse()","price()","sanitize()","textf()","unit()","readme"],"longSearchIndex":["applicationcontroller","applicationhelper","bigbasketapi","bigbasketapi::itempage","customuri","nokogirinode","nokogirinode#/()","customuri#build_url()","nokogirinode#csstxt()","nokogirinode#extract_rs()","nokogirinode#get()","nokogirinode#get_first()","bigbasketapi#get_item_page()","nokogirinode#get_node()","nokogirinode#get_nodes()","nokogirinode#get_top()","bigbasketapi::itempage#id()","bigbasketapi::itempage#name()","customuri::new()","nokogirinode::new()","nokogirinode#node()","customuri#open_url()","customuri#parse()","bigbasketapi::itempage#price()","customuri#sanitize()","nokogirinode#textf()","bigbasketapi::itempage#unit()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["BigBasketApi","","BigBasketApi.html","","<p>Api module for big basket website\n"],["BigBasketApi::ItemPage","","BigBasketApi/ItemPage.html","","<p>class representing an item show page on the big basket website\n"],["CustomUri","","CustomUri.html","","<p>customized methods to open a web page built on top of uri class it would\nhold methods to regulate calls …\n"],["NokogiriNode","","NokogiriNode.html","","<p>This is a generic class that holds the methods to extract data from a\nhtml/xml page using Nokogiri\n"],["/","NokogiriNode","NokogiriNode.html#method-i-2F","(key)","<p>Returns the attribute value for the give key\n"],["build_url","CustomUri","CustomUri.html#method-i-build_url","(opts)",""],["csstxt","NokogiriNode","NokogiriNode.html#method-i-csstxt","(node,path='.')",""],["extract_rs","NokogiriNode","NokogiriNode.html#method-i-extract_rs","(txt)",""],["get","NokogiriNode","NokogiriNode.html#method-i-get","(node, path='.')","<p>Return the text value of an node.\n"],["get_first","NokogiriNode","NokogiriNode.html#method-i-get_first","(node,path='.')","<p>Reutrn the text value of first matching node\n"],["get_item_page","BigBasketApi","BigBasketApi.html#method-i-get_item_page","(id)","<p>return the item page object given the item id\n"],["get_node","NokogiriNode","NokogiriNode.html#method-i-get_node","(path)","<p>return first node if more than one nodes found\n"],["get_nodes","NokogiriNode","NokogiriNode.html#method-i-get_nodes","(path)","<p>Return an array of nodes matching the given path\n"],["get_top","NokogiriNode","NokogiriNode.html#method-i-get_top","(node,path='.')",""],["id","BigBasketApi::ItemPage","BigBasketApi/ItemPage.html#method-i-id","()","<p>item id for big basket item url can be generated from id as :\nbigbasket.com/pd/{id}/some-text\n"],["name","BigBasketApi::ItemPage","BigBasketApi/ItemPage.html#method-i-name","()",""],["new","CustomUri","CustomUri.html#method-c-new","(url)",""],["new","NokogiriNode","NokogiriNode.html#method-c-new","(url=nil,node=nil)","<p>Pass Nokogiri::HTML::node object\n"],["node","NokogiriNode","NokogiriNode.html#method-i-node","()",""],["open_url","CustomUri","CustomUri.html#method-i-open_url","(url,opts={})",""],["parse","CustomUri","CustomUri.html#method-i-parse","(url)",""],["price","BigBasketApi::ItemPage","BigBasketApi/ItemPage.html#method-i-price","()",""],["sanitize","CustomUri","CustomUri.html#method-i-sanitize","(url)","<p>See\nstackoverflow.com/questions/3891158/how-do-i-monkey-patch-rubys-uri-parse-method\nfor reason of ecaping …\n"],["textf","NokogiriNode","NokogiriNode.html#method-i-textf","(text)",""],["unit","BigBasketApi::ItemPage","BigBasketApi/ItemPage.html#method-i-unit","()",""],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"]]}}